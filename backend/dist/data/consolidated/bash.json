[
    {
        "name": "System",
        "snippets": [
            {
                "title": "Kill Previous Instances",
                "description": "Kill all previous instances of a script",
                "author": "saminjay",
                "tags": [
                    "kill",
                    "process",
                    "background"
                ],
                "contributors": [],
                "code": "function kill_prev() {\n    # $$ contains current pid (grep ignore so it doesn't suicide)\n    local processes\n    readarray -t processes < <(pgrep -f \"$0\" | grep -v \"$$\")\n    kill \"${processes[@]}\" >/dev/null 2>&1\n}\n\n# Usage:\n# Add this function to your background running script\n# It will make sure that only one instance of your script is running at a time\nkill_prev\n",
                "extension": "bash"
            },
            {
                "title": "System Resource Monitor",
                "description": "Monitors system resources (CPU, RAM, disk, users)",
                "author": "sponkurtus2",
                "tags": [
                    "file",
                    "system"
                ],
                "contributors": [],
                "code": "system_resources () {\n      echo \"CPU Load: $(top -bn1 | grep \"Cpu(s)\" | awk '{print $2}')%\"\n      echo \"Memory Used: $(free -m | awk 'NR==2{printf \"%.2f%%\", $3*100/$2}')\"\n      echo \"Disk Used: $(df -h / | awk 'NR==2{print $5}')\"\n      echo \"Active Users: $(who | wc -l)\"\n}\n\nsystem_resources \"$@\"\n\n# Usage:\nchmod a+x system-resource-monitor.sh # First make it executable for all the users\n\n./system-resource-monitor.sh  # It will print the following system resources (CPU, RAM, disk, and active users)\n",
                "extension": "bash"
            }
        ]
    }
]